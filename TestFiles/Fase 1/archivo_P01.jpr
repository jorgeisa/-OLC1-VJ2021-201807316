# Archivo de prueba

# Comentario de una sola línea

#*
  De esta manera se
  representan los
  comentarios multilinea
*#

# Declaración y asignación de variables globales
var global_a;             # Declara una variable con valor nulo
var global_b              # Declara una variable con valor nulo
var global_int = 25;      # Declara una variable de tipo entero
var global_dou = 25.0;    # Declara una variable de tipo double
var global_boo = true     # Declara una variable de tipo boolean
var global_cha = 'g'      # Declara una variable de tipo char
var global_cad = "cadena" # Declara una variable de tipo string
var GlObAl_A;             # Error: La variable ya está definida
var global_salto = "Cadena con\nsalto de línea";
var global_barra = "Cadena con \\ barra invertida";
var global_comilla_doble = "Cadena con \"comilla doble\"";
var global_tab = "Cadena con \t tabulación";
var global_commilla_simple = "Cadena con \'comilla simple\'";

# Declaraciones de funciones


#Iniciando la ejecucion del programa a partir de aquí
main(){
  # Prueba de caracteres especiales
  print("---------- CARACTERES ESPECIALES ----------");
  print("-> Salto de línea:");
  print(global_salto);
  print("-------------------------------------------");
  print("-> Barra invertida:");
  print(global_barra);
  print("-------------------------------------------");
  print("-> Comilla doble:");
  print(global_comilla_doble);
  print("-------------------------------------------");
  print("-> Tabulacion:");
  print(global_tab);
  print("-------------------------------------------");
  print("-> Comilla simple:");
  print(global_comilla_simple);
  print("-------------------------------------------");
  
  # Sumas de prueba
  print("---------- SUMAS DE PRUEBA ----------");
  var suma_1 = global_int + 5;
  print("suma = " + suma_1) # Suma de enteros "suma = 30"
  var suma_2 = global_dou + 5.0;
  print("suma = " + suma_2) # Suma de doubles "suma = 30.0"
  var suma_3 = global_boo + 0;
  print("suma = " + suma_3) # Suma de booleanos "suma = 1"
  var suma_4 = global_cha + 'b';
  print("suma = " + suma_4) # Suma de chars "suma = gb"
  var suma_5 = global_cad + "_extra";
  print("suma = " + suma_5) # Suma de cadenas "suma = cadena_extra"

  # Resta de prueba
  print("---------- RESTAS DE PRUEBA ----------");
  var resta_1 = global_int - 5;
  print("resta = " + resta_1); # Resta de enteros "resta = 20"
  var resta_2 = global_dou - 5;
  print("resta = " + resta_2); # Resta de doubles "resta = 20.0"
  var resta_3 = global_boo - 1;
  print("resta = " + resta_3); # Resta de booleano y entero "resta = 0"
  var resta_4 = global_boo - 1.0;
  print("resta = " + resta_4); # Resta de booleano y double "resta = 0.0"

  # Multiplicaciones de prueba
  print("---------- MULTIPLICACIONES DE PRUEBA ----------");
  var mult_1 = global_int * 2;
  print("multiplicacion = " + mult_1); # Multiplicación de enteros "multiplicacion = 50"
  var mult_2 = global_dou * 2.0;
  print("multiplicacion = " + mult_2); # Multiplicación de doubles "multiplicacion = 50.0"
  var mult_3 = global_int * global_dou;
  print("multiplicacion = " + mult_3); # Multiplicación de entero y double "multiplicacion = 625.0"

  # Divisiones de prueba
  print("---------- DIVISIONES DE PRUEBA ----------");
  var div_1 = global_int / global_int;
  print("division = " + div_1); # Division entre enteros "division = 1.0"
  var div_2 = global_dou / global_dou;
  print("division = " + div_2); # Division entre doubles "division = 1.0"
  var div_3 = global_int / global_dou;
  print("division = " + div_3); # Division entre entero y double "division = 1.0"

  # Potencias de prueba
  print("---------- POTENCIAS DE PRUEBA ----------");
  var pot_1 = global_int ** 2;
  print("potencia = " + pot_1); # Potencia de enteros "potencia = 625"
  var pot_2 = global_dou ** 2.0;
  print("potencia = " + pot_2); # Potencia de doubles "potencia = 625.0"
  var pot_3 = global_dou ** 2;
  print("potencia = " + pot_3); # Potencia de double y entero "potencia = 625.0"

  # Módulos de prueba
  print("---------- MODULOS DE PRUEBA ----------");
  var mod_1 = global_int % 4;
  print("modulo = " + mod_1); # Modulo entre enteros "modulo = 1.0"
  var mod_2 = global_dou % 4.0;
  print("modulo = " + mod_2); # Modulo entre doubles "modulo = 1.0"
  var mod_3 = global_dou % 4;
  print("modulo = " + mod_3); # Modulo entre double y entero "modulo = 1.0"

  # Negaciones unarias de prueba
  print("---------- NEGACIONES UNARIAS DE PRUEBA ----------");
  var neg_1 = -global_int;
  print("negacion = " + neg_1); # Negacion unaria de entero "negacion = -25"
  var neg_2 = - global_dou;
  print("negacion = " + neg_2); # Negacion unaria de double "negacion = -25.0"

  # Operaciones relacionales de prueba
  print("---------- IGUALACIONES DE PRUEBA ----------");
  var igu_1 = global_int == 25;
  print("igualación = " + igu_1); # Igualación de enteros "igualación = true"
  var igu_2 = global_dou == 20;
  print("igualación = " + igu_2); # Igualación de doubles "igualación = false"
  var igu_3 = global_boo == true;
  print("igualación = " + igu_3); # Igualación de booleanos "igualación = true"
  var igu_4 = global_cha == 'c';
  print("igualación = " + igu_4); # Igualación de chars "igualación = false"
  var igu_5 = global_cad == "cadena";
  print("igualación = " + igu_5); # Igualación de chars "igualación = true"

  print("---------- DIFERENCIACIACIONES DE PRUEBA ----------");
  var dif_1 = global_int =! 25;
  print("diferenciación = " + dif_1); # Diferenciación de enteros "diferenciación = false"
  var dif_2 = global_dou =! 20;
  print("diferenciación = " + dif_2); # Diferenciación de doubles "diferenciación = true"
  var dif_3 = global_boo =! true;
  print("diferenciación = " + dif_3); # Diferenciación de booleanos "diferenciación = false"
  var dif_4 = global_cha =! 'c';
  print("diferenciación = " + dif_4); # Diferenciación de chars "diferenciación = 1"
  var dif_5 = global_cad =! "cadena";
  print("diferenciación = " + dif_5); # Diferenciación de chars "diferenciación = false"

  print("---------- COMPARACIONES "MENOR QUE" DE PRUEBA ----------");
  var meq_1 = global_int < 25;
  print("menor que = " + meq_1); # Menor que de enteros "menor que = true"
  var meq_2 = global_dou < 20;
  print("menor que = " + meq_2); # Menor que de doubles "menor que = false"
  var meq_3 = global_boo < true;
  print("menor que = " + meq_3); # Menor que de booleanos "menor que = true"

  print("---------- COMPARACIONES "MENOR O IGUAL QUE" DE PRUEBA ----------");
  var mei_1 = global_int <= 25;
  print("menor o igual que = " + mei_1); # Menor o igual que de enteros "menor o igual que = true"
  var mei_2 = global_dou <= 20;
  print("menor o igual que = " + mei_2); # Menor o igual que de doubles "menor o igual que = false"
  var mei_3 = global_boo <= true;
  print("menor o igual que = " + mei_3); # Menor o igual que de booleanos "menor o igual que = true"

  print("---------- COMPARACIONES "MAYOR QUE" DE PRUEBA ----------");
  var maq_1 = global_int > 25;
  print("mayor que = " + maq_1); # Mayor que de enteros "mayor que = false"
  var maq_2 = global_dou > 20;
  print("mayor que = " + maq_2); # Mayor que de doubles "mayor que = true"
  var maq_3 = global_boo > true;
  print("mayor que = " + maq_3); # Mayor que de booleanos "mayor que = false"

  print("---------- COMPARACIONES "MAYOR O IGUAL QUE" DE PRUEBA ----------");
  var mai_1 = global_int >= 25;
  print("mayor o igual que = " + mai_1); # Mayor o igual que de enteros "mayor o igual que = true"
  var mai_2 = global_dou >= 20;
  print("mayor o igual que = " + mai_2); # Mayor o igual que de doubles "mayor o igual que = true"
  var mai_3 = global_boo >= true;
  print("mayor o igual que = " + mai_3); # Mayor o igual que de booleanos "mayor o igual que = true"

  # Operaciones lógicas de prueba
  print("---------- OPERACIONES LÓGICAS DE PRUEBA ----------");
  var or_1 = false || false;
  print("or = " + or_1); # Or con resultado falso "or = false"
  var or_2 = false || true;
  print("or = " + or_2); # Or con resultado verdadero "or = true"
  var or_3 = true || false;
  print("or = " + or_3); # Or con resultado verdadero "or = true"
  var or_4 = true || true;
  print("or = " + or_4); # Or con resultado verdadero "or = true"

  var and_1 = false && false;
  print("and = " + and_1); # And con resultado falso "and = false"
  var and_2 = false && true;
  print("and = " + and_2); # And con resultado verdadero "and = false"
  var and_3 = true && false;
  print("and = " + and_3); # And con resultado verdadero "and = false"
  var and_4 = true && true;
  print("and = " + and_4); # And con resultado verdadero "and = true"

  var not_a = true;
  var not_b = false;
  var not_1 = !not_a;
  print("not = " + not_1); # Not con resultado falso "not = false"
  var not_2 = !not_b;
  print("not = " + not_2); # Not con resultado verdadero "not = true"

  # Signos de agrupación de prueba
  print("---------- AGRUPACIÓN DE PRUEBA ----------");
  var agr_1 = (1 + 2 + (1 - 2 / 2)) * 3;
  print("agrupación = " + agr_1); # Resultado de la agrupación "agrupación = 9"

  # Casteos de prueba
  print("---------- CASTEOS DE PRUEBA ----------");
  var cas_1 = (double) 5;
  print("int a double = " + cas_1); # Casteo de int a double "int a double = 5.0"
  var cas_2 = (int) 5.0;
  print("double a int = " + cas_2); # Casteo de double a int "double a int = 5"
  var cas_3 = (string) 5;
  print("int a string = " + cas_3); # Casteo de int a string "int a string = 5"
  var cas_4 = (char) 5;
  print("int a char = " + cas_4); # Casteo de int a char "int a char = 5"
  var cas_5 = (string) 5.0;
  print("double a string = " + cas_5); # Casteo de double a string "double a string = 5.0"
  var cas_6 = (int) '5';
  print("char a int = " + cas_6); # Casteo de char a int "char a int = 5"
  var cas_7 = (double) '5';
  print("char a double = " + cas_7); # Casteo de "char a double = 5.0"

  # Prueba de incremento de variables
  print("---------- PRUEBA DE INCREMENTO DE VARIABLES ----------");
  var inc_1 = 10;
  inc_1++;
  print("variable incrementada = " + inc_1); # "variable incrementada = 11"
  var inc_2 = 10.7;
  inc_2++;
  print("variable incrementada = " + inc_2); # "variable incrementada = 11.7"

  # Prueba de decremento de variables
  print("---------- PRUEBA DE DECREMENTO DE VARIABLES ----------");
  var dec_1 = 10;
  dec_1--;
  print("variable decrementada = " + dec_1); # "variable decrementada = 9"
  var dec_2 = 10.7;
  dec_2--;
  print("variable decrementada = " + dec_2); # "variable decrementada = 9.7"

  # Sentencias de control
  print("---------- SENTENCIA IF ----------");
  var if_1 = 25;
  if(if_1 < 50)
  {
    print("if_1 es menor que 50");
  }
  if(if_1 > 50)
  {
    print("esto no debería de estar aquí");
  }
    # Salida de esta sección
    # if_1 es menor que 50

  print("---------- SENTENCIA ELSE ----------");
  if(if_1 > 50)
  {
    print("esto no debería de estar aquí");
  }
  else
  {
    print("if_1 no es mayor a 50");
  }
    # Salida de esta sección
    # if_1 no es mayor a 50

  print("---------- SENTENCIA ELSE-IF ----------");
  if(if_1 > 50)
  {
    print("esto no debería de estar aquí");
  }
  else if (if_1 <= 50 && if_1 >= 0)
  {
    print("if_1 se encuentra entre 0 y 50");
    if (if_1 > 10)
    {
      print("if_1 es mayor a 10");
    }
    else
    {
      print("esto no debería de estar aquí");
    }
  }
  else
  {
    print("esto no debería de estar aquí");
  }
    # Salida de esta sección
    # if_1 se encuentra entre 0 y 50
    # if_1 es mayor a 10

  print("---------- SENTENCIA SWITCH ----------");
  var swi_1 = 25;
  switch(swi_1){
    case 10:
      print("esto no debería de estar aquí");
    case 15:
      print("esto no debería de estar aquí");
    case 25:
      print("switch case funcionando correctamente");
    default:
      print("acción por defecto");
  }
    # Salida de esta sección
    # switch case funcionando correctamente
    # acción por defecto

  # Sentencias cíclicas
  print("---------- SENTENCIA WHILE ----------");
  var whi_1 = 1;
  while(whi_1 <= 5)
  {
    print("ejecución número: " + whi_1);
    whi_1++;
  }
    # Salida de esta sección
    # ejecución número: 1
    # ejecución número: 2
    # ejecución número: 3
    # ejecución número: 4

  print("---------- SENTENCIA WHILE ANIDADA ----------");
  var whi_2 = 1;
  while(whi_2 <= 3)
  {
    print("ejecución número: " + whi_2);
    var whi_2_anidado = 1;
    while(whi_2_anidado <= 3)
    {
      print("ejecución anidada número: " + whi_2_anidado);
      whi_2_anidado++;
    }
    whi_2++;
  }
    # Salida de esta sección
    # ejecución número: 1
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
    # ejecución número: 2
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
    # ejecución número: 3
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3

  print("---------- SENTENCIA FOR ----------");
  for(var i = 1; i <= 3; i++)
  {
    print("ejecución número: " + i);
  }
    # Salida de esta sección
    # ejecución número: 1
    # ejecución número: 2
    # ejecución número: 3

  print("---------- SENTENCIA FOR ANIDADA ----------");
  for(var i = 1; i <= 3; i++)
  {
    print("ejecución número: " + i);
    for(var j = 1; j <= 3; j++)
    {
      print("ejecución anidada: " + j);
    }
  }
    # Salida de esta sección
    # ejecución número: 1
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
    # ejecución número: 2
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
    # ejecución número: 3
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3

  print("---------- SENTENCIA FOR DENTRO DE WHILE ----------");
  var whi_3 = 1;
  while(whi_3 <= 3)
  {
    print("ejecución número: " + whi_3);
    for(var i = 1; i <= 3; i++)
    {
      print("ejecución anidada número: " + i);
    }
    whi_3++;
  }
    # Salida de esta sección
    # ejecución número: 1
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
    # ejecución número: 2
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
    # ejecución número: 3
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3

  print("---------- SENTENCIA WHILE DENTRO DE FOR ----------");
  for(var i = 1; i <= 3; i++)
  {
    print("ejecución número: " + i);
    var whi_4 = 1;
    while(whi_4 <= 3)
    {
      print("ejecución anidada número: " + whi_4);
      whi_4++;
    }
  }
    # Salida de esta sección
    # ejecución número: 1
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
    # ejecución número: 2
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
    # ejecución número: 3
    # ejecución anidada número: 1
    # ejecución anidada número: 2
    # ejecución anidada número: 3
}

